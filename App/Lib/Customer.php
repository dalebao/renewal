<?php
/**
 * Created by PhpStorm.
 * User: baoxulong
 * Date: 2018/6/4
 * Time: 上午11:13
 */

namespace App\Lib;


use App\Interfaces\RabbitMQInterface;

/**
 * Class Customer
 * @package App\Lib
 */
class Customer extends RabbitMQ implements RabbitMQInterface
{
    /**
     * @var
     */
    private static $instance;

    /**
     * Customer constructor.
     */
    public function __construct()
    {
    }

    /**
     * @param $config
     * @return Customer|void
     * @throws \Exception
     */
    public static function init($config)
    {
        parent::init($config);// TODO: Change the autogenerated stub

        if (empty(self::$instance)) {
            self::$instance = new self();
        }
        return self::$instance;
    }

    /**
     * @param $exchange_name
     * @return $this
     * @throws \AMQPConnectionException
     * @throws \AMQPExchangeException
     */
    public function setExchange($exchange_name)
    {
        self::$amqpExchange = new \AMQPExchange(self::$amqpChannel);
        self::$amqpExchange->setName($exchange_name);
        self::$amqpExchange->setType(AMQP_EX_TYPE_DIRECT); //direct类型
        self::$amqpExchange->setFlags(AMQP_DURABLE); //持久化
        var_dump("Exchange Status:" . self::$amqpExchange->declare() . "\n");
        return $this;
    }

    /**
     * @param $queue_name
     * @return $this
     * @throws \AMQPConnectionException
     * @throws \AMQPQueueException
     */
    public function setQueue($queue_name)
    {
        //创建队列
        self::$amqpQueue = new \AMQPQueue(self::$amqpChannel);
        self::$amqpQueue->setName($queue_name);

        self::$amqpQueue->setFlags(AMQP_DURABLE); //持久化
        echo("Message Total:" . self::$amqpQueue->declare());
//绑定交换机与队列，并指定路由键
        return $this;
    }

    /**
     * @param $route_key
     * @return $this
     */
    public function bind($route_key)
    {
        self::$amqpQueue->bind(self::$amqpExchange->getName(), $route_key);
        return $this;
    }

    /**
     * @param String $message
     * @return mixed|void
     */
    public function exec(String $message = '')
    {
        self::$amqpQueue->consume(function ($envelope, $queue) {
            $msg = $envelope->getBody();
            echo $msg . "\n"; //处理消息
            sleep(1);
            $queue->ack($envelope->getDeliveryTag()); //手动发送ACK应答
        });
    }


}